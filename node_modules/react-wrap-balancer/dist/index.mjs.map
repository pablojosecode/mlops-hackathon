{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\n\nconst SYMBOL_KEY = '__wrap_b'\nconst SYMBOL_OBSERVER_KEY = '__wrap_o'\nconst IS_SERVER = typeof window === 'undefined'\nconst useIsomorphicLayoutEffect = IS_SERVER\n  ? React.useEffect\n  : React.useLayoutEffect\n\ntype RelayoutFn = (\n  id: string | number,\n  ratio: number,\n  wrapper?: HTMLElement\n) => void\n\ndeclare global {\n  interface Window {\n    [SYMBOL_KEY]: RelayoutFn\n  }\n}\n\nconst relayout: RelayoutFn = (id, ratio, wrapper) => {\n  wrapper = wrapper || document.querySelector<HTMLElement>(`[data-br=\"${id}\"]`)\n  const container = wrapper.parentElement\n\n  const update = (width: number) => (wrapper.style.maxWidth = width + 'px')\n\n  // Reset wrapper width\n  wrapper.style.maxWidth = ''\n\n  // Get the intial container size\n  const width = container.clientWidth\n  const height = container.clientHeight\n\n  // Synchronously do binary search and calculate the layout\n  let left: number = width / 2\n  let right: number = width\n  let middle: number\n\n  if (width) {\n    while (left + 1 < right) {\n      middle = ~~((left + right) / 2)\n      update(middle)\n      if (container.clientHeight === height) {\n        right = middle\n      } else {\n        left = middle\n      }\n    }\n\n    // Update the wrapper width\n    update(right * ratio + width * (1 - ratio))\n  }\n\n  // Create a new observer if we don't have one.\n  // Note that we must inline the key here as we use `toString()` to serialize\n  // the function.\n  if (!wrapper['__wrap_o']) {\n    ;(wrapper['__wrap_o'] = new ResizeObserver(() => {\n      self.__wrap_b(0, +wrapper.dataset.brr, wrapper)\n    })).observe(container)\n  }\n}\n\nconst RELAYOUT_STR = relayout.toString()\n\nconst createScriptElement = (injected: boolean, suffix?: string) => (\n  <script\n    suppressHydrationWarning\n    dangerouslySetInnerHTML={{\n      // Calculate the balance initially for SSR\n      __html:\n        (injected ? '' : `self.${SYMBOL_KEY}=${RELAYOUT_STR};`) +\n        (suffix || ''),\n    }}\n  />\n)\n\ninterface BalancerProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The HTML tag to use for the wrapper element.\n   * @default 'span'\n   */\n  as?: React.ElementType\n  /**\n   * The balance ratio of the wrapper width (0 <= ratio <= 1).\n   * 0 means the wrapper width is the same as the container width (no balance, browser default).\n   * 1 means the wrapper width is the minimum (full balance, most compact).\n   * @default 1\n   */\n  ratio?: number\n  children?: React.ReactNode\n}\n\n/**\n * An optional provider to inject the global relayout function, so all children\n * Balancer components can share it.\n */\nconst BalancerContext = React.createContext<boolean>(false)\nconst Provider: React.FC<{\n  children?: React.ReactNode\n}> = ({ children }) => {\n  return (\n    <BalancerContext.Provider value={true}>\n      {createScriptElement(false)}\n      {children}\n    </BalancerContext.Provider>\n  )\n}\n\nconst Balancer: React.FC<BalancerProps> = ({\n  as: Wrapper = 'span',\n  ratio = 1,\n  children,\n  ...props\n}) => {\n  const id = React.useId()\n  const wrapperRef = React.useRef<HTMLElement>()\n  const hasProvider = React.useContext(BalancerContext)\n\n  // Re-balance on content change and on mount/hydration.\n  useIsomorphicLayoutEffect(() => {\n    if (wrapperRef.current) {\n      // Re-assign the function here as the component can be dynamically rendered, and script tag won't work in that case.\n      ;(self[SYMBOL_KEY] = relayout)(0, ratio, wrapperRef.current)\n    }\n  }, [children, ratio])\n\n  // Remove the observer when unmounting.\n  useIsomorphicLayoutEffect(() => {\n    return () => {\n      if (wrapperRef.current) {\n        const resizeObserver = wrapperRef.current[SYMBOL_OBSERVER_KEY]\n        if (resizeObserver) {\n          resizeObserver.disconnect()\n          delete wrapperRef.current[SYMBOL_OBSERVER_KEY]\n        }\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      <Wrapper\n        {...props}\n        data-br={id}\n        data-brr={ratio}\n        ref={wrapperRef}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          textDecoration: 'inherit',\n        }}\n        suppressHydrationWarning\n      >\n        {children}\n      </Wrapper>\n      {createScriptElement(hasProvider, `self.${SYMBOL_KEY}(\"${id}\",${ratio})`)}\n    </>\n  )\n}\n\n// As Next.js adds `display: none` to `body` for development, we need to trigger\n// a re-balance right after the style is removed, synchronously.\nif (!IS_SERVER && process.env.NODE_ENV !== 'production') {\n  const next_dev_style = document.querySelector<HTMLElement>(\n    '[data-next-hide-fouc]'\n  )\n  if (next_dev_style) {\n    const callback: MutationCallback = (mutationList) => {\n      for (const mutation of mutationList) {\n        for (const node of Array.from(mutation.removedNodes)) {\n          if (node !== next_dev_style) continue\n\n          observer.disconnect()\n          const elements = document.querySelectorAll<HTMLElement>('[data-br]')\n\n          for (const element of Array.from(elements)) {\n            self[SYMBOL_KEY](0, +element.dataset.brr, element)\n          }\n        }\n      }\n    }\n    const observer = new MutationObserver(callback)\n    observer.observe(document.head, { childList: true })\n  }\n}\n\nexport default Balancer\nexport { Provider }\n"],"mappings":"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","names":["React","SYMBOL_KEY","SYMBOL_OBSERVER_KEY","IS_SERVER","useIsomorphicLayoutEffect","relayout","id","ratio","wrapper","container","update","width","height","left","right","middle","RELAYOUT_STR","createScriptElement","injected","suffix","BalancerContext","Provider","children","Balancer","Wrapper","props","wrapperRef","hasProvider","resizeObserver","next_dev_style","callback","mutationList","mutation","node","observer","elements","element","src_default"]}