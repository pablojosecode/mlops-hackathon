import { ReactNode } from 'react';
import * as yoga_layout from 'yoga-layout';

declare const code: {
    readonly 'ja-JP': RegExp;
    readonly 'ko-KR': RegExp;
    readonly 'zh-CN': RegExp;
    readonly 'zh-TW': RegExp;
    readonly 'zh-HK': RegExp;
    readonly 'th-TH': RegExp;
    readonly 'bn-IN': RegExp;
    readonly 'ar-AR': RegExp;
    readonly 'ta-IN': RegExp;
    readonly 'ml-IN': RegExp;
    readonly 'he-IL': RegExp;
    readonly 'te-IN': RegExp;
    readonly devanagari: RegExp;
    readonly kannada: RegExp;
};
declare type Locale = keyof typeof code;

/**
 * This class handles everything related to fonts.
 */

declare type Weight = 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;
declare type Style = 'normal' | 'italic';
interface FontOptions {
    data: Buffer | ArrayBuffer;
    name: string;
    weight?: Weight;
    style?: Style;
    lang?: string;
}

declare let Yoga: typeof yoga_layout;
declare function init(yoga: typeof Yoga): void;

declare type SatoriOptions = ({
    width: number;
    height: number;
} | {
    width: number;
} | {
    height: number;
}) & {
    fonts: FontOptions[];
    embedFont?: boolean;
    debug?: boolean;
    graphemeImages?: Record<string, string>;
    loadAdditionalAsset?: (languageCode: string, segment: string) => Promise<FontOptions | string | undefined>;
};

declare function satori(element: ReactNode, options: SatoriOptions): Promise<string>;

export { FontOptions as Font, Style as FontStyle, Weight as FontWeight, Locale, SatoriOptions, satori as default, init };
